name: Test Packages
# This workflow tests the latest (third-party hosted) available builds

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
  schedule:
    - cron:  '0 23 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test-wheel:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'test packages') || github.event_name == 'schedule' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        package:
          - engine
          - utils
          - perception/activity_recognition
          - perception/compressive_learning
          - perception/face_recognition
          - perception/heart_anomaly_detection
          - perception/multimodal_human_centric
          - perception/pose_estimation
          - perception/fall_detection
          - perception/speech_recognition
          - perception/skeleton_based_action_recognition
          - perception/semantic_segmentation
          - perception/object_tracking_2d
          - perception/object_tracking_3d
          - perception/object_detection_2d/centernet
          - perception/object_detection_2d/detr
          - perception/object_detection_2d/gem
          - perception/object_detection_2d/ssd
          - perception/object_detection_2d/nanodet
          - perception/object_detection_2d/yolov3
          - perception/object_detection_2d/retinaface
          - perception/object_detection_2d/nms
          - perception/object_detection_3d
          - perception/facial_expression_recognition
          - simulation/human_model_generation
          - control/mobile_manipulation
          - control/single_demo_grasp
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Test Wheel
      run: |
        export OPENDR_HOME=$PWD
        export DISABLE_BCOLZ_AVX2=true
        export OPENDR_DEVICE=cpu
        sudo apt -y install python3.8-venv libfreetype6-dev git build-essential cmake python3-dev wget libopenblas-dev libsndfile1 libboost-dev python3-dev
        python3 -m venv venv
        source venv/bin/activate
        python3 -m pip install -U pip
        python3 -m pip install wheel
        python3 -m pip install opendr-toolkit-engine
        python3 -m pip install opendr-toolkit
        python3 -m unittest discover -s tests/sources/tools/${{ matrix.package }}
  test-docker:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'test packages') || github.event_name == 'schedule' }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        package:
          - engine
          - utils
          - perception/activity_recognition
          - perception/compressive_learning
          - perception/face_recognition
          - perception/heart_anomaly_detection
          - perception/multimodal_human_centric
          - perception/pose_estimation
          - perception/fall_detection
          - perception/speech_recognition
          - perception/skeleton_based_action_recognition
          - perception/semantic_segmentation
          - perception/object_tracking_2d
          - perception/object_tracking_3d
          - perception/object_detection_2d/centernet
          - perception/object_detection_2d/detr
          - perception/object_detection_2d/gem
          - perception/object_detection_2d/ssd
          - perception/object_detection_2d/nanodet
          - perception/object_detection_2d/yolov3
          - perception/object_detection_2d/retinaface
          - perception/object_detection_2d/nms
          - perception/object_detection_3d
          - perception/facial_expression_recognition
          - simulation/human_model_generation
          - control/mobile_manipulation
          - control/single_demo_grasp
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Test Docker
      run: |
        docker run --name toolkit -i opendr/opendr-toolkit:cpu_v1.1.1 bash
        docker start toolkit
        docker exec -i toolkit bash -c "source bin/activate.sh && source tests/sources/tools/control/mobile_manipulation/run_ros.sh && python -m unittest discover -s tests/sources/tools/${{ matrix.package }}"
