<launch>
  <arg name="robot"  default="steel"/>
  <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
  <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
  <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
  <arg name="laser_model"  default="false"/>
  <arg name="camera_model"  default="false"/>
  <arg name="gzpose" default="-x 0 -y 0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="multi" default=""/>
  <arg name="model_name" default="tiago"/>
  <rosparam ns="pal_robot_info" param="type">"tiago"</rosparam>

  <!-- Robot model -->
  <include file="$(find mobile_manipulation_rl)/robots_world/tiago/upload.launch">
    <arg name="arm" value="$(arg arm)"/>
    <arg name="end_effector" value="$(arg end_effector)"/>
    <arg name="ft_sensor" value="$(arg ft_sensor)"/>
    <arg name="laser_model" value="$(arg laser_model)"/>
    <arg name="camera_model" value="$(arg camera_model)"/>
    <arg name="multi"  value="$(arg multi)"/>
  </include>

<!-- Motion planning -->

  <!-- Selection of kinematics solver -->
  <arg name="kinematics" value="$(optenv IK_SOLVER kdl)" />

  <!-- Selector for tiago type -->
  <arg name="file_suffix" value="$(eval ('no-arm' if not arm else end_effector+ ('' if not ft_sensor else '_'+ft_sensor)))"/>

  <!-- The semantic description that corresponds to the URDF -->
  <param if="$(eval end_effector != 'custom')" name="robot_description_semantic" textfile="$(find tiago_moveit_config)/config/srdf/tiago_$(arg file_suffix).srdf" />
  <param if="$(eval end_effector == 'custom')" name="robot_description_semantic" textfile="$(find moveit_custom_config)/config/srdf/tiago_custom.srdf" />

  <!-- Load updated joint limits (override information from URDF) -->
  <group ns="robot_description_planning">
    <rosparam command="load" file="$(find tiago_moveit_config)/config/joint_limits.yaml"/>
  </group>

  <!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace -->
  <group ns="robot_description_kinematics">
    <rosparam command="load" file="$(find tiago_moveit_config)/config/kinematics_$(arg kinematics).yaml"/>
  </group>


 <!-- move_group settings -->
  <arg name="allow_trajectory_execution" default="false"/>
  <arg name="fake_execution" default="true"/>
  <arg name="max_safe_path_cost" default="1"/>
  <arg name="jiggle_fraction" default="0.05" />

  <arg name="capabilities" default=""/>
  <arg name="disable_capabilities" default=""/>

  <!-- Start the actual move_group node/action server -->
  <node name="move_group" launch-prefix="" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="">
    <!-- Set the display variable, in case OpenGL code is used internally -->
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
    <param name="max_safe_path_cost" value="$(arg max_safe_path_cost)"/>
    <param name="jiggle_fraction" value="$(arg jiggle_fraction)" />

    <!-- MoveGroup capabilities to load -->
    <param name="capabilities" value="$(arg capabilities)"/>
    <param name="disable_capabilities" value="$(arg disable_capabilities)"/>

    <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
    <param name="planning_scene_monitor/publish_planning_scene" value="true" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="false" />
    <param name="planning_scene_monitor/publish_state_updates" value="false" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="false" />
  </node>

</launch>