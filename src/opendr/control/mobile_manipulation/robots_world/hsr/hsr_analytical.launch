<launch>
  <!-- By default we do not overwrite the URDF. Change the following to true to change the default behavior -->
  <arg name="load_robot_description" default="true"/>

  <!-- The name of the parameter under which the URDF is loaded -->
  <arg name="robot_description" default="robot_description"/>
  <arg name="upload_robot_model_launch" default="$(find mobile_manipulation_rl)/robots_world/hsr/upload_hsrb.launch"/>

  <include if="$(arg load_robot_description)" file="$(arg upload_robot_model_launch)" >
    <remap to="$(arg robot_description)" from="/robot_description" />
  </include>

  <param name="$(arg robot_description)_semantic" textfile="$(find hsrb_moveit_config)/config/hsrb.srdf" />

  <!-- Load updated joint limits (override information from URDF) -->
  <group ns="$(arg robot_description)_planning">
    <rosparam command="load" file="$(find hsrb_moveit_config)/config/joint_limits.yaml"/>
  </group>

  <!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace -->
  <arg name="robot_name" default="hsrb"/>
  <group ns="$(arg robot_description)_kinematics">
    <rosparam command="load" file="$(find hsrb_moveit_config)/config/kinematics.yaml"/>
    <rosparam param="robot_name" subst_value="true">"hsrb"</rosparam>
  </group>



  <node name="move_group" launch-prefix="" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="">
    <!-- Set the display variable, in case OpenGL code is used internally -->
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <param name="allow_trajectory_execution" value="false"/>
    <param name="max_safe_path_cost" value="1"/>
    <param name="jiggle_fraction" value="0.05" />
    <param name="default_workspace_bounds" value="2.0" />

    <param name="capabilities" value="move_group/MoveGroupKinematicsService
				      move_group/MoveGroupMoveAction
				      move_group/MoveGroupStateValidationService
				      move_group/MoveGroupGetPlanningSceneService
				      " />

    <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
    <param name="planning_scene_monitor/publish_planning_scene" value="true" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="false" />
    <param name="planning_scene_monitor/publish_state_updates" value="false" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="false" />

    <remap from="joint_states" to="joint_states" />
  </node>

</launch>
